import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";

import FormComp from "@/components/FormComp";
import {
  Stack,
  Divider,
  Box,
  Modal,
  Button,
  useMediaQuery,
} from "@mui/material";
import RightPannel from "@/components/RightPannel";
import { useSelector } from "react-redux";
import { RootState } from "@/redux/store";
import { setClose, setOpen } from "@/redux/features/stateSlice";
import { useDispatch } from "react-redux";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const style = {
    position: "absolute" as "absolute",
    top: "50%",
    left: "50%",
    transform: "translate(-50%, -50%)",
    maxWidth: 400,
    bgcolor: "#E3E3E3",
    // border: "2px solid #000",
    borderRadius: "0.5rem",
    boxShadow: 24,
    p: 1,
    width: "90%",
  };

  const { open } = useSelector((store: RootState) => {
    return store.state;
  });

  const dispatch = useDispatch();
  // const isSmallScreen = useMediaQuery("(min-width:600px)");

  return (
    <>
      <Head>
        <title>Dev By Nate | Risk Calculator</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main
        style={{
          display: "flex",
          justifyContent: "center",
          alignItems: "center",
          height: "100vh",
        }}
      >
        <Stack
          justifyContent="space-between"
          sx={{ flexDirection: { xs: "column-reverse", md: "row" } }}
        >
          <FormComp />
          <Divider />
          <RightPannel />

          {/* {!isSmallScreen ? (
            <Modal
              open={open}
              onClose={() => {
                dispatch(setClose());
              }}
              aria-labelledby="modal-modal-title"
              aria-describedby="modal-modal-description"
            >
              <Box sx={style}>
                <RightPannel p="1rem" />
                <Button
                  onClick={() => {
                    dispatch(setClose());
                  }}
                  fullWidth
                  variant="contained"
                >
                  close
                </Button>
              </Box>
            </Modal>
          ) : (
            <RightPannel />
          )} */}
        </Stack>
      </main>
    </>
  );
}
